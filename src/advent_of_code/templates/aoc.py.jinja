"""Advent of Code {{ year }}, day {{ day }}: https://adventofcode.com/{{ year }}/day/{{ day }}"""
from __future__ import annotations

from io import StringIO

import pytest

from advent_of_code.base import Solution
from advent_of_code.cli import log


class AocSolution(Solution[int, int]):
    def __init__(self, **kwargs):
        super().__init__({{ day }}, {{ year }}, **kwargs)

    def solve_part_one(self) -> int:
        with self.open_input() as fp:
            ...

    def solve_part_two(self) -> int:
        with self.open_input() as fp:
            ...


SAMPLE_INPUTS = [
    """\
""",
]


@pytest.fixture
def sample_input(request):
    with StringIO(SAMPLE_INPUTS[getattr(request, "param", 0)]) as f:
        yield f


def test_foo(sample_input):
    ...
